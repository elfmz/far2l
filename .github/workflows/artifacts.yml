name: Artifacts

on:
  push:
    branches:
        - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    if: ${{ !(github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository != 'elfmz/far2l') }}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dependencies: "-minimal"
          - dependencies: ""
            options: "-DPYTHON=yes"

    steps:
    - uses: actions/checkout@v4

    - name: Dependencies
      run: sudo apt-get update ; sudo apt-get -y install $(cat dependencies${{ matrix.dependencies }}.txt)

    - name: Create Build Environment
      # Create a separate build directory as working directory for all subsequent commands
      run: mkdir -p _build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      # -S and -B options specify source and build directories
      run: cmake -S . -B _build -Wno-dev -DCMAKE_BUILD_TYPE=$BUILD_TYPE ${{ matrix.options }}

    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        cmake --build _build --config $BUILD_TYPE

    - name: File Tree
      shell: bash
      run: tree _build

    - name: Packing Artifact
      uses: actions/upload-artifact@v4
      with:
        name: far2l-release${{ matrix.dependencies }}
        path: _build/install

    - name: Test
      working-directory: _build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
