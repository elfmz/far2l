name: build
run-name: build for commit ${{ github.sha }}

on:
  workflow_dispatch:
  push:

jobs:
  build-chroot:
    name: build ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          # arch: [x86_64, x86, aarch64, armhf, armv7, ppc64le, s390x]
          arch: [x86_64]
          os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup ccache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ccache
          key: ccache-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ matrix.arch }}-

      - name: Setup Alpine Linux for ${{ matrix.arch }}
        uses: jirutka/setup-alpine@v1
        with:
          branch: v3.18
          arch: ${{ matrix.arch }}
          packages: >
            bash build-base ccache cmake coreutils findutils gawk git grep libarchive-dev libnfs-dev libssh-dev
            libtree libxi-dev linux-headers neon-dev ninja-is-really-ninja patchelf pcre-dev perl samba-dev tar
            uchardet-dev wget xerces-c-dev xz
          shell-name: alpine.sh

      - name: Add extra build-deps to chroot
        shell: alpine.sh --root {0}
        run: |
          apk add --no-progress makeself --repository=https://dl-cdn.alpinelinux.org/alpine/edge/testing
          apk add --no-progress quilt --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community

      - name: Build far2l inside chroot
        env:
          ARCH: ${{ matrix.arch }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          DESTDIR: ${{ github.workspace }}/AppDir
          STANDALONE: true
        shell: alpine.sh {0}
        run: |
          export VERSION=$(cat packaging/version)-beta
          export PKG_NAME=far2l_${VERSION}_${ARCH}
          bash -x ${GITHUB_WORKSPACE}/.github/workflows/portable/build_far2l.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: far2l-${{ matrix.arch }}
          path: |
            ./**/far2l*.tar*
          if-no-files-found: error

  build-AppImage:
    name: build AppImage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
    steps:
      - name: Add build dependencies
        env:
          PACKAGES: >
            ccache cmake file g++ libarchive-dev libneon27-dev libnfs-dev libpcre3-dev libsmbclient-dev libssh-dev
            libuchardet-dev libwxgtk3.0-gtk3-dev libxerces-c-dev libxi-dev ninja-build patch patchelf quilt wget
        run: |
            sudo apt update -qq && sudo apt install -y --no-install-recommends ${{ env.PACKAGES }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup ccache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ccache
          key: ccache-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ matrix.os }}-

      - name: Build far2l
        env:
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          DESTDIR: ${{ github.workspace }}/AppDir
          APPIMAGE: true
        shell: bash
        run: |
          export VERSION=$(cat packaging/version)-beta
          export PKG_NAME=far2l_${VERSION}_$(uname -m)
          bash -x ${GITHUB_WORKSPACE}/.github/workflows/portable/build_far2l.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: far2l-AppImage-${{ matrix.os }}
          path: |
            ./**/far2l*.tar*
          if-no-files-found: error

  release:
    # if: ${{ false }} # disable for now
    name: Upload release assets
    needs: [build-chroot, build-AppImage]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Get commit date
        run: |
          echo "DATE=$(git log -1 --format=%ci | date -f - +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Upload release assets
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          tag_name: ${{ github.ref_name }}
          name: ${{ env.DATE }}
          body: |
            ${{ github.repository }}@${{ github.sha }}
          files: |
            ./**/far2l_*.run.tar
            ./**/far2l_*.AppImage.tar

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        continue-on-error: true
