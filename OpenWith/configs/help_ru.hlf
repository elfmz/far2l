.Language=Russian,Russian
.PluginContents=OpenWith

@Contents
$^#Плагин OpenWith#
$^#Version 1.0#
$^#Copyright (C) 2025 spnethw#
$^#Содержание#
 Плагин #OpenWith# предоставляет контекстно-зависимое меню для открытия выбранного файла или файлов с помощью подходящего приложения. Он интеллектуально определяет тип файла и запрашивает у операционной системы список зарегистрированных приложений, которые могут его обработать. Если выбрано несколько файлов, плагин находит общие приложения, зарегистрированные для обработки каждого из них, путем пересечения списков кандидатов для каждого файла. Плагин является кроссплатформенным и использует нативные механизмы ОС для предоставления точного и релевантного выбора приложений: в Linux/BSD он следует стандартам XDG для определения MIME-типов и поиска приложений, а в macOS — интегрируется с фреймворком Launch Services.

 После вызова плагина на файле отображается меню со списком подходящих приложений. Пользователь может выбрать приложение для запуска или нажать #F3# для просмотра подробной информации о файле и выбранном приложении. По клавише #F9# вызывается диалог конфигурации для тонкой настройки поведения плагина, который разделен на общие и платформоспецифичные опции. Изменение настроек, влияющих на алгоритмы поиска, фильтрации или ранжирования кандидатов, приводит к немедленному обновлению списка приложений в меню.

   ~Диалог настроек (F9)~@ConfigurationDialog@

   ~Информационный диалог (F3)~@InformationDialog@

   ~Советы по использованию и полезности~@Tips@

   ~Решение проблем~@Troubleshooting@

@ConfigurationDialog
$^#Плагин OpenWith#
$^#Version 1.0#
$^#Copyright (C) 2025 spnethw#
$^#Диалог настроек (F9)#
 Диалог настроек, доступный по нажатию #F9# в меню выбора приложений, позволяет вам кастомизировать поведение плагина. Он разделен на общие и платформоспецифичные настройки.

 #1. ОБЩИЕ НАСТРОЙКИ#

 #-# Использовать внешний терминал для консольных приложений
   Если опция включена, приложения, требующие терминала (например, vim или mc), будут запускаться в новом окне внешнего терминала. Если отключена, они будут выполняться во встроенном терминале far2l. Важно: при выборе нескольких файлов и отключенной опции плагин применит "умную" фильтрацию. Так как встроенный терминал не может обрабатывать несколько одновременных запусков, плагин скроет те терминальные приложения, которые требуют отдельного запуска для каждого файла. Приложения, способные принять весь список файлов за один раз, останутся в списке.

 #-# Не ждать завершения команды
   Если опция включена, GUI-приложения будут запускаться асинхронно, немедленно возвращая управление в far2l. Если отключена, far2l будет ожидать закрытия запущенного приложения. Эта настройка не влияет на терминальные приложения. Она также может быть проигнорирована при открытии нескольких файлов в приложении, которое не поддерживает их одновременную обработку в одной команде; в этом случае будет принудительно выполнен асинхронный запуск, чтобы избежать блокировки интерфейса.

 #-# Снимать выделение, если выбрана команда
   Когда эта настройка включена, выделение на панели будет сниматься после выполнения команды меню.

 #-# Подтверждать открытие, если файлов больше чем...
   Когда эта опция включена, плагин будет запрашивать подтверждение перед запуском приложения, если количество выбранных файлов превышает порог, указанный в соседнем поле ввода. Это служит мерой предосторожности против случайного запуска процесса с большим количеством файлов, что может быть ресурсоёмким или медленным. Если вы отклоните подтверждение, вы вернётесь к предыдущему экрану (либо к меню выбора приложений, либо к информационному диалогу), что позволит вам пересмотреть своё действие.


 #2. ПЛАТФОРМОСПЕЦИФИЧНЫЕ НАСТРОЙКИ#

 #2.1. Настройки для Linux/BSD#

 Эти настройки тонко регулируют, как плагин определяет типы файлов и находит приложения, следуя спецификациям XDG. Плагин собирает список потенциальных MIME-типов для файла из всех включённых источников. Затем этот список приоритизируется, и приложения ранжируются на основе того, насколько хорошо они соответствуют наиболее специфичным MIME-типам. Это обеспечивает более гибкие и точные ассоциации, чем при использовании единственного метода определения.

 #-# Использовать утилиту `xdg-mime`
   Определять MIME‑тип выбранного файла вызовом команды 'xdg-mime query filetype'. Это стандартный и наиболее рекомендуемый метод. Утилита обращается к системной базе данных shared-mime-info, сопоставляющей шаблоны имен файлов (glob-шаблоны) с MIME-типами, — той же самой базе, которую используют окружения рабочего стола для ассоциации типов с приложениями. Её результаты максимально совместимы с записями "MimeType" в .desktop-файлах. Хотя утилита может дополнительно выполнять анализ содержимого, её основная зависимость от имен файлов делает её уязвимой к ошибкам при работе с файлами, имеющими неверное или отсутствующее расширение.

 #-# Использовать утилиту `file`
   Определять MIME‑тип выбранного файла вызовом команды 'file --mime-type'. Эта утилита выполняет глубокий анализ бинарного содержимого файла, используя собственную обширную базу "магических чисел". Она чрезвычайно надёжна, и её невозможно обмануть неверным расширением файла. Однако она может работать немного медленнее, так как требует чтения содержимого файла, а возвращаемые ею имена MIME-типов могут иногда отличаться от официальных имён IANA или имён в базе shared-mime-info, что потенциально может привести к меньшему количеству найденных приложений.

 #-# Использовать фолбэк по расширению
   В крайнем случае, если вышеуказанные утилиты не справляются, отсутствуют или отключены, плагин пытается угадать MIME-тип по встроенной статической карте распространённых расширений. Это наименее надёжный метод, который следует использовать лишь как запасной вариант в системах с некорректно настроенной или неполной базой MIME-типов.

 #-# Загружать псевдонимы MIME-типов
   Включает загрузку ассоциаций MIME-типов из системных файлов "aliases". Это помогает найти больше приложений, связывая MIME-тип файла с его альтернативными именами (например, "application/x-deb" с "application/vnd.debian.binary-package", или "image/ico" с "image/vnd.microsoft.icon").

 #-# Загружать подклассы MIME‑типов
   Включает загрузку иерархии наследования MIME-типов из системных файлов "subclasses". Это позволяет находить приложения, которые могут работать с более общим, родительским типом файла. Опция незаменима для форматов, чья внутренняя структура не очевидна из названия MIME-типа.
   Например, файл формата Microsoft Word (.docx), имеющий MIME-тип "application/vnd.openxmlformats-officedocument.wordprocessingml.document", по своей структуре является ZIP-архивом ("application/zip"). При включении этой опции для .docx файла будут предложены не только текстовые процессоры, но и менеджеры архивов.
   Это может привести к появлению в списке менее релевантных приложений, но значительно расширяет возможности по обработке файлов.

 #-# Распознавать структурные суффиксы MIME
   Многие форматы файлов используют другой, более общий формат в качестве основы, указывая это суффиксом в MIME-типе (например, +xml или +json). Например, векторное изображение SVG имеет MIME-тип "image/svg+xml". С включенной опцией, плагин предложит не только графические редакторы, но и любые текстовые или XML-редакторы, зарегистрированные для "application/xml". Это даёт возможность редактировать внутреннюю структуру файла. Отключите опцию, чтобы видеть только приложения, предназначенные непосредственно для работы с конечным форматом (в данном случае, с изображениями SVG).

 #-# Искать приложения для обобщённых MIME-типов ("type/*", "text/plain")
   Если эта опция включена, плагин будет искать приложения не только для точного MIME-типа файла, но и для его обобщённых вариантов. Например, для файла с типом "text/x-c++src" будут также предложены редакторы, зарегистрированные для "text/plain". Это увеличивает количество доступных приложений, но может добавить "шум" в виде менее релевантных программ. Отключение этой опции полезно, если вы хотите видеть в списке только специализированные приложения, точно соответствующие типу файла.

 #-# Показывать универсальные обработчики для всех файлов
   Если опция включена, плагин будет добавлять универсальный MIME-тип "application/octet-stream" в качестве финального резервного варианта для любого файла. Это гарантирует, что даже для файлов с неизвестным или неопознанным типом всегда будут предложены универсальные инструменты, такие как hex-редакторы. Отключите эту опцию, чтобы уменьшить "шум" в списке приложений и видеть только программы, которые явно зарегистрированы для распознанного типа файла. При отключении опции список может оказаться пустым для файлов без чёткой ассоциации.

 #-# Использовать mimeinfo.cache
   Ускорить поиск приложений за счет использования файлов "mimeinfo.cache". Это индексные файлы, автоматически поддерживаемые системой, которые создают прямое сопоставление MIME-типа (например, "image/png") со списком .desktop-файлов приложений, способных его обработать. Отключение этой опции приведет к более медленному, полному сканированию всех .desktop-файлов, находящихся в каталогах данных XDG.

 #-# Фильтровать по OnlyShowIn/NotShowIn
   Учитывать ключи "OnlyShowIn" и "NotShowIn" в .desktop-файлах. Это отфильтрует список приложений, чтобы показывать только те, которые релевантны для текущего окружения рабочего стола (например, GNOME, KDE).

 #-# Проверять TryExec
   Перед отображением приложения проверять, существует ли исполняемый файл, указанный в ключе "TryExec" его .desktop-файла, и является ли он запускаемым. Это помогает скрыть приложения, которые объявлены, но не установлены должным образом или имеют неработающие ярлыки. Однако эта проверка может замедлять появление меню выбора приложений. Если значение "TryExec" — это просто имя команды (например, "gedit"), плагин вынужден искать её во всех каталогах, перечисленных в переменной окружения "$PATH", что приводит к множественным операциям доступа к диску для каждого проверяемого приложения. Вы можете безопасно отключить эту опцию для повышения производительности, если уверены, что .desktop-файлы в вашей системе корректны и не ссылаются на несуществующие исполняемые файлы.

 #-# Отключить ранжирование (сортировка по имени)
   Если опция включена, она переопределяет сложную систему ранжирования и выводит список приложений строго в алфавитном порядке. Это может быть полезно для пользователей, которые предпочитают простой и предсказуемый список вместо списка, приоритет в котором определяется специфичностью MIME-типа и авторитетностью источника ассоциации.
   Подробное объяснение логики, которую отключает эта опция, смотрите в разделе "Как работает ранжирование? Почему приложение X выше, чем Y?" руководства по ~решению проблем~@Troubleshooting@.

 #-# Передавать простые пути вместо file:// URI
   Эта опция позволяет выбрать формат передачи путей к файлам при конструировании команды запуска. Спецификация XDG для ключа "Exec" явно разрешает передавать локальные файлы для кодов %u и %U как в виде URI (file://), так и в виде обычных путей. Оба способа являются валидными. По умолчанию плагин генерирует URI, так как этот формат является более явным. Однако некоторые приложения, использующие %u и %U, ожидают получить на вход именно простой путь. Включение этой опции переключит формат на передачу простых экранированных путей, что улучшит совместимость с такими приложениями.


 #2.2. Настройки для macOS#

 Для macOS нет платформоспецифичных настроек. Плагин использует нативный фреймворк Launch Services, который не требует дополнительной конфигурации. Launch Services централизованно и автоматически управляет привязками приложений к документам и поддерживает базу данных приложений и их универсальных идентификаторов типов (UTI), которая обновляется при установке или удалении приложений.

   ~Содержание~@Contents@


@InformationDialog
$^#Плагин OpenWith#
$^#Version 1.0#
$^#Copyright (C) 2025 spnethw#
$^#Информационный диалог (F3)#
 Информационный диалог, доступный по нажатию #F3# в меню выбора приложений, отображает подробную техническую информацию о файле, выделенном приложении и точной команде, которая будет использована для его запуска.

 #1. ОБЩИЕ ПОЛЯ#

 #-# Адрес файла
   Полный, абсолютный путь к выбранному файлу. Если выбрано несколько файлов, это поле будет отображать их количество.

 #-# MIME-тип
   MIME-тип файла, определенный плагином.

 #-# Команда запуска
   Финальная командная строка, которая будет выполнена при нажатии Enter.


 #2. ПЛАТФОРМОСПЕЦИФИЧНЫЕ ИНФОРМАЦИОННЫЕ ПОЛЯ#

 #2.1. Детали приложения в Linux/BSD#

  Этот раздел отображает подробную информацию, извлеченную из .desktop-файла приложения. Эти файлы являются стандартом Freedesktop.org и служат в качестве ярлыков и контейнеров с метаданными для приложений, описывая, как их следует именовать, отображать и запускать.

 #-# Desktop файл
   Полный путь к .desktop-файлу (текстовому файлу в формате INI), который описывает это приложение.

 #-# Источник
   Это поле указывает на источник ассоциации, объясняя, почему приложение было предложено для открытия файла. Оно поясняет, было ли соответствие найдено через высокоприоритетную системную утилиту xdg-mime, пользовательские настройки в файле "mimeapps.list", быстрый поиск по индексу "mimeinfo.cache" или в результате полного сканирования всех .desktop-файлов в качестве резервного метода. Эта информация полезна для решения проблем с ассоциациями приложений. Примечание: это поле не отображается при выборе нескольких файлов, так как источник ассоциации может отличаться для каждого файла.

 #-# Name
   Человекочитаемое имя приложения, предназначенное для отображения в меню.

 #-# GenericName
   Более общее описание категории приложения (например, "Текстовый редактор", "Веб-браузер").

 #-# Comment
   Более длинное описание приложения, часто используемое в качестве всплывающей подсказки.

 #-# Categories
   Список категорий, разделенных точкой с запятой, который используется окружением рабочего стола для организации приложений в меню.

 #-# Exec
   Шаблон командной строки для запуска приложения. Он может содержать специальные заполнители (коды полей), такие как %f для пути к одному файлу, %U для списка URL-адресов или %% для символа процента.

 #-# TryExec
   Путь к исполняемому файлу. Окружение рабочего стола может проверить, существует ли этот файл и является ли он исполняемым, прежде чем отображать запись в меню. Это используется для сокрытия пунктов меню для некорректно установленных приложений.

 #-# Terminal
   Логическое значение (true или false), указывающее, должно ли приложение запускаться в окне терминала.

 #-# OnlyShowIn
   Список идентификаторов окружений рабочего стола, разделенных точкой с запятой (например, "GNOME;KDE;"). Если этот ключ присутствует, приложение должно отображаться только в указанных окружениях. Это позволяет разработчикам создавать инструменты, предназначенные для конкретных рабочих столов.

 #-# NotShowIn
   Список идентификаторов окружений рабочего стола, разделенных точкой с запятой. Если этот ключ присутствует, приложение должно быть скрыто в указанных окружениях. Это обратное действие по отношению к OnlyShowIn, полезное для сокрытия программ, которые плохо интегрируются с определенными рабочими столами.


 #2.2. Детали приложения в macOS#

 #-# Имя
   Отображаемое имя приложения из информации его пакета.

 #-# Расположение
   Полный путь к пакету приложения (например, "/Applications/TextEdit.app").

 #-# Исполняемый файл
   Имя главного исполняемого файла внутри пакета приложения.

 #-# Версия
   Видимая пользователю версия приложения (например, "1.14").

 #-# Версия сборки
   Внутренняя версия сборки или пакета (например, "329").

   ~Содержание~@Contents@

@Tips
$^#Плагин OpenWith#
$^#Version 1.0#
$^#Copyright (C) 2025 spnethw#
$^#Советы по использованию и полезности#
    Для быстрого вызова можно макросом задействовать, например, клавишу "#≣ Menu#"/"#Apps#":

    В #far2l# поместите в файл #~~/.config/far2l/settings/key_macros.ini# следующие строки:
 #[KeyMacros/Shell/Apps]#
 #Description=OpenWith Plugin for selected file(s)#
 #DisableOutput=0x1#
 #Sequence=F11 O#

    В #far2m# в каталоге #~~/.config/far2m/Macros/scripts/# следующие строки:
 #Macro {#
 # description="OpenWith plugin for selected file(s)";#
 # area="Shell"; key="Apps";#
 # action=function() Plugin.Menu(0x93CDEF19) end;#
 #}#
 либо поместите в отдельный файл с расширением #.lua#,
 либо добавьте в любой существующий файл с другими макросами.

    После повторного запуска far2l/far2m макрос станет доступен для использования.

   ~Содержание~@Contents@

@Troubleshooting
$^#Плагин OpenWith#
$^#Version 1.0#
$^#Copyright (C) 2025 spnethw#
$^#Решение проблем#

 #Почему список пуст при выборе нескольких файлов?#

 Это ключевая особенность алгоритма: плагин ищет приложения, которые зарегистрированы в системе как обработчики для #каждого# из выбранных типов файлов (режим "пересечения").
 Пример: Если вы выбрали архив (".zip") и изображение (".jpg"), список, скорее всего, будет пустым, так как программы, способные одновременно работать и с архивами, и с изображениями, встречаются редко.
 Решение: Обрабатывайте файлы разных категорий отдельными операциями. Этот алгоритм наиболее эффективен для пакетной обработки однотипных файлов.


 #Как работает ранжирование? Почему приложение X выше, чем Y? (Linux/BSD)#

 Порядок в списке определяется рангом, который вычисляется для каждого приложения. Более высокий ранг означает более релевантное приложение. Ранг зависит от двух факторов:
 1. Специфичность MIME-типа (главный фактор): Ассоциация с более точным типом ("text/x-c++src") всегда приоритетнее, чем с общим ("text/plain").
 2. Источник ассоциации (вторичный фактор): Приоритет источников от высшего к низшему: глобальная команда ('xdg-mime query default'), секция "[Default Applications]" в "mimeapps.list", секция "[Added Associations]", и, наконец, кэш "mimeinfo.cache" или данные из самих .desktop-файлов.
 Таким образом, приложение, установленное по умолчанию в системе для очень специфичного типа файла, всегда будет на вершине списка.
 Если вы предпочитаете простой и предсказуемый список вместо этой сложной логики, вы можете отключить её с помощью опции "Отключить ранжирование (сортировка по имени)" в ~диалоге настроек~@ConfigurationDialog@.


 #Почему моё любимое приложение не отображается в списке? (Linux/BSD)#

 Если приложение не появляется даже при выборе одного файла, проверьте следующие пункты:
 #-# Отсутствие .desktop-файла: Убедитесь, что для приложения существует .desktop-файл в одном из стандартных каталогов ("~~/.local/share/applications", "/usr/share/applications" и т.д.).
 #-# Некорректная ассоциация: Проверьте, что в "MimeType" .desktop-файла указан нужный MIME-тип, или что ассоциация прописана в "~~/.config/mimeapps.list".
 #-# Опции фильтрации: Попробуйте отключить в настройках плагина опции "Фильтровать по OnlyShowIn/NotShowIn" и "Проверять TryExec", так как они могут скрывать приложение.
 #-# Устаревший кэш: Выполните в терминале 'update-desktop-database' и 'update-mime-database', чтобы обновить системные кэши.


 #Приложение есть в списке, но не запускается. (Linux/BSD)#

 Это почти всегда означает ошибку в строке "Exec" .desktop-файла. Нажмите F3 для просмотра команды, которую пытается выполнить плагин, и проверьте её на типичные ошибки:
 #-# Неверные коды полей: Плагин поддерживает стандартные коды ("%f", "%F", "%u", "%U"). Некоторые приложения могут использовать устаревшие или нестандартные коды, которые не будут работать.
 #-# Отсутствие кавычек: Пути с пробелами должны быть корректно экранированы.
 #-# Программа не в "$PATH": Если "Exec" содержит просто имя программы, она должна находиться в одном из каталогов, перечисленных в переменной окружения "$PATH".
 #-# Неверный формат пути: Приложение может некорректно обрабатывать file:// URI, которые плагин передает по умолчанию, даже если его .desktop-файл использует коды %u или %U. Попробуйте включить опцию "Передавать простые пути вместо file:// URI" в ~диалоге настроек~@ConfigurationDialog@.

   ~Содержание~@Contents@
