<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN"
  "http://colorer.sf.net/2003/hrc.dtd">
<hrc version="take5" xmlns="http://colorer.sf.net/2003/hrc"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd">
<!--
-->
   <annotation>
      <documentation>
        Groovy
      </documentation>
      <contributors>
        Yury Finkel
      </contributors>
     <appinfo>
      <prototype name="groovy" group="main" description="Groovy">
        <location link="groovy.hrc"/>
        <filename>/\.groovy$/i</filename>
        <filename>/\.gdsl$/i</filename>
        <filename>/Jenkinsfile/i</filename>
        <firstline>/^import/</firstline>
        <firstline>/^#!groovy/</firstline>
        <parameters>
          <param name="j2se-classes" value="true" description="Use some common used J2SE class names"/>
          <param name="tabs-as-errors" value="false" description="Shows tabulation symbol as error"/>
          <param name="spaces-as-errors" value="false" description="Shows trailing spaces as error"/>
        </parameters>
      </prototype>
     </appinfo>
   </annotation>
   <type name="groovy">

      <import type="def"/>

      <scheme name="String">
        <regexp match="/\\./" region0="Comment"/>
      </scheme>

      <scheme name="GString">
        <block start="/\$\{/" end="/\}/" scheme="GString"
          region="VarStrong"
          region00="PairStart" region10="PairEnd"
        />
        <regexp match='/\$\w+/' region0="VarStrong"/>
        <inherit scheme="String"/>
      </scheme>

      <scheme name="groovy">
<!-- Comments -->
        <block start="/\/\//" end="/$/" scheme="Comment" region="LineComment"/>
        <block start="/\/\*/" end="/\*\//" scheme="Comment" region="Comment" region00="PairStart" region10="PairEnd"/>
<!-- paired -->
        <block start="/(\()/" end="/(\))/" scheme="groovy" region00="SymbolStrong" region01="PairStart" region10="SymbolStrong" region11="PairEnd"/>
        <block start="/(\[)/" end="/(\])/" scheme="groovy" region00="SymbolStrong" region01="PairStart" region10="SymbolStrong" region11="PairEnd"/>
        <block start="/(\{)/" end="/(\})/" scheme="groovy" region00="SymbolStrong" region01="PairStart" region10="SymbolStrong" region11="PairEnd"/>
<!-- Strings -->
        <regexp match="/(((\/))[^\/]+((\/)))(\s*(\w|\(|\[|\{))?!/"
           region1="String"
           region2="StringEdge" region3="PairStart"
           region4="StringEdge" region5="PairEnd"/>
        <block start="/(''')/" end="/(''')/"
           scheme="String" region="String"
           region00="StringEdge" region01="PairStart" region10="StringEdge" region11="PairEnd"/>
        <block start="/(&quot;&quot;&quot;)/" end="/(&quot;&quot;&quot;)/"
           scheme="GString" region="String"
           region00="StringEdge" region01="PairStart" region10="StringEdge" region11="PairEnd"/>
        <block start="/(&quot;)/" end="/(&quot;|$)/"
           scheme="GString" region="String"
           region00="StringEdge" region01="PairStart" region10="StringEdge" region11="PairEnd"/>
        <block start="/(')/" end="/('|$)/"
           scheme="String" region="String"
           region00="StringEdge" region01="PairStart" region10="StringEdge" region11="PairEnd"/>


        <!--<block start="/([^\w\]\)\}\'&quot;\.\/])\s*\//" end="/\/|$/" scheme="String" region="String"/>-->
        <!--<block start="/(\/)([^\/])?=/" end="/(\/)(\s*[^\/\w\(\{\[])?|$/"
           scheme="String" region="String"
           region00="StringEdge" region01="PairStart" region10="StringEdge" region11="PairEnd"/>-->

<!-- Numbers  -->
        <regexp match="/\B(\$[\da-fA-F]+)\b/" region0="def:Number"/>
        <inherit scheme="FloatNumber"/>
        <inherit scheme="DecNumber"/>
        <regexp match="/\B(\$[\da-fA-F]*?([^\s\W\da-fA-F]).*?)\b/" region0="Error"/>

<!-- Symbols -->
        <keywords region="Symbol">
            <symb name="="/>
            <symb name="&lt;"/>
            <symb name="&gt;"/>
            <symb name="+"/>
            <symb name="-"/>
            <symb name="*"/>
            <symb name="/"/>
            <symb name="%"/>
            <symb name=")"/>
            <symb name="]"/>
            <symb name="}"/>
            <symb name="("/>
            <symb name="["/>
            <symb name="{"/>
            <symb name="&amp;"/>
            <symb name="|"/>
            <symb name="^"/>
            <symb name="~"/>
            <symb name="!"/>
            <symb name="?"/>
            <symb name=":"/>
            <symb name="."/>
            <symb name="@"/>
            <symb name=","/>
            <symb name=";" region="SymbolStrong"/>
         </keywords>

         <keywords ignorecase="no" region="Keyword">
            <word name="abstract"/>
            <word name="any"/>
            <word name="as"/>
            <word name="assert"/>
            <word name="boolean"/>
            <word name="break"/>
            <word name="byte"/>
            <word name="case"/>
            <word name="catch"/>
            <word name="char"/>
            <word name="class"/>
            <word name="const"/>
            <word name="continue"/>
            <word name="def"/>
            <word name="default"/>
            <word name="do"/>
            <word name="double"/>
            <word name="else"/>
            <word name="enum"/>
            <word name="extends"/>
            <word name="false"/>
            <word name="final"/>
            <word name="finally"/>
            <word name="float"/>
            <word name="for"/>
            <word name="goto"/>
            <word name="if"/>
            <word name="implements"/>
            <word name="import"/>
            <word name="in"/>
            <word name="instanceof"/>
            <word name="int"/>
            <word name="interface"/>
            <word name="long"/>
            <word name="native"/>
            <word name="new"/>
            <word name="null"/>
            <word name="package"/>
            <word name="private"/>
            <word name="protected"/>
            <word name="public"/>
            <word name="return"/>
            <word name="short"/>
            <word name="static"/>
            <word name="strictfp"/>
            <word name="super"/>
            <word name="switch"/>
            <word name="synchronized"/>
            <word name="this"/>
            <word name="threadsafe"/>
            <word name="throw"/>
            <word name="throws"/>
            <word name="transient"/>
            <word name="true"/>
            <word name="try"/>
            <word name="void"/>
            <word name="volatile"/>
            <word name="while"/>
         </keywords>

         <keywords ignorecase="no" region="FunctionKeyword">
            <word name="delegate"/>
            <word name="it"/>
            <word name="owner"/>
            <word name="use"/>
            <word name="with"/>
            <word name="each"/>
            <word name="print"/>
            <word name="println"/>
            <word name="toString"/>
            <word name="toInteger"/>
            <word name="String"/>
            <word name="Object"/>
         </keywords>

      </scheme>



   </type>
</hrc>
<!--
Copyright (C) 1999-2005 Cail Lomecb <irusskih@gmail.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, see <https://www.gnu.org/licenses/>
-->
