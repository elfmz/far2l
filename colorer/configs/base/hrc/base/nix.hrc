<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN"
  "http://colorer.sf.net/2003/hrc.dtd">
<hrc version="take5" xmlns="http://colorer.sf.net/2003/hrc"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd">

  <type name="nix">

    <annotation><documentation>
        Nix
    </documentation></annotation>

    <import type="def"/>

    <region name="Code" parent="def:Text"/>
    <region name="StringEscape" parent="def:StringContent"/>
    <region name='Import' parent='def:Directive'/>
    <region name='ImportOutline' parent='def:Outlined'/>
    <region name="Path"     parent="def:Path"/>
    <region name="URL"      parent="def:String"/>
    <region name="LiteralKeyword" parent="def:Keyword"/>
    <region name='Interpolation' parent='def:StringEdge'/>
    <region name="Ident" parent="def:Identifier"/> <!-- Label  -->

    <scheme name="TabsAsErrors" if="tabs-as-errors">
      <regexp match="/\t+/" region='def:Error'/>
    </scheme>

    <scheme name="SpacesAsErrors" if="spaces-as-errors">
      <regexp match="/\x20+$/" region='def:Error'/>
    </scheme>

    <scheme name="NotNestedComment">
      <inherit scheme="TabsAsErrors"/>
      <inherit scheme="SpacesAsErrors"/>
      <inherit scheme="Comment"/>
    </scheme>

    <scheme name="String">
      <inherit scheme="TabsAsErrors"/>
      <inherit scheme="SpacesAsErrors"/>
<!--  <regexp match="/\\[xX]0*[\da-fA-F]{1,2}/"                   region0="StringEscape"/> -->
      <regexp match="/\\./"                                       region0="StringEscape"/>
      <block start="/(\$\{)/" end="/(\})/" scheme="NixExpression" region="Code" region00="Interpolation" region01="PairStart" region10="Interpolation" region11="PairEnd"/>
    </scheme>

    <scheme name="BlockString">
      <inherit scheme="TabsAsErrors"/>
      <inherit scheme="SpacesAsErrors"/>

      <regexp match="/&apos;&apos;\$/"                                          region0="StringEscape"/>
      <regexp match="/&apos;&apos;\\./"                                         region0="StringEscape"/>
      <regexp match="/&apos;&apos;\\$/"                                         region0="StringEscape"/>
      <regexp match="/&apos;&apos;&apos;/"                                      region0="StringEscape"/>
      <block start="/(\$\{)/" end="/(\})/" scheme="NixExpression" region="Code" region00="Interpolation" region01="PairStart" region10="Interpolation" region11="PairEnd"/>
    </scheme>

    <scheme name="NixIdent">
      <regexp match="/\w[\w\d-]*'*/"           region0="Ident"/>
    </scheme>

    <scheme name="NixExpression">
      <inherit scheme="TabsAsErrors"/>
      <inherit scheme="SpacesAsErrors"/>

      <inherit scheme="def:unixCommentDirective"/>
      <block start="/#/"    end="/\s*$/"            scheme="Comment"          region="LineComment" region10="def:Error"/>
      <block start="/\/\*/" end="/\*\//"            scheme="NotNestedComment" region="Comment"     region00="PairStart" region10="PairEnd"/>

      <block start="/(\$\{)/" end="/(\})/" scheme="NixExpression" region00="Interpolation" region01="PairStart" region10="Interpolation" region11="PairEnd"/>
      <block start="/(\{)/"   end="/(\})/" scheme="NixExpression" region00="Symbol"        region01="PairStart" region10="Symbol"        region11="PairEnd"/>
      <block start="/(\()/"   end="/(\))/" scheme="NixExpression" region00="Symbol"        region01="PairStart" region10="Symbol"        region11="PairEnd"/>
      <block start="/(\[)/"   end="/(\])/" scheme="NixExpression" region00="Symbol"        region01="PairStart" region10="Symbol"        region11="PairEnd"/>

      <regexp match=    "/[\w\d._+-]*(\/[\w\d._+-]+)+/"                           region0="Path"/>
      <regexp match=             "/\~(\/[\w\d._+-]+)+/"                           region0="Path"/>
      <regexp match="/&lt;[\w\d._+-]+(\/[\w\d._+-]+)*&gt;/"                       region0="Path"/>
      <regexp match="/[A-Za-z][A-Za-z0-9+.-]*:[A-Za-z0-9%/?:@&amp;=+$,_.!~*'-]+/" region0="URL"/>
      <block start="/(&quot;)/"       end="/(&quot;)/"       scheme="String"      region="String" region00="def:StringEdge" region01="def:PairStart" region10="def:StringEdge" region11="def:PairEnd"/>
      <block start="/(&apos;&apos;)/" end="/(&apos;&apos;)/" scheme="BlockString" region="String" region00="def:StringEdge" region01="def:PairStart" region10="def:StringEdge" region11="def:PairEnd"/>

      <keywords region="Keyword">
        <word name="abort"/>
        <word name="assert"/>
        <word name="else"/>
        <word name="if"/>
        <word name="in"/>
        <word name="inherit"/>
        <word name="import"/>
        <word name="let"/>
        <word name="or"/>
        <word name="rec"/>
        <word name="then"/>
        <word name="throw"/>
        <word name="with"/>
      </keywords>
      <keywords region="LiteralKeyword">
        <word name="true"/>
        <word name="false"/>
        <word name="null"/>
      </keywords>
      <keywords region="Symbol">
        <symb name="."/>
        <symb name=":"/>
        <symb name=","/>
        <symb name=";"/>
        <symb name="*"/>
        <symb name="/"/>
        <symb name="+"/>
        <symb name="-"/>
        <symb name="!"/>
        <symb name="?"/>
        <symb name="@"/>
        <symb name="&lt;"/>
        <symb name="&gt;"/>
        <symb name="&amp;&amp;"/>
        <symb name="||"/>
        <symb name="="/>
        <symb name="..."/>
      </keywords>

      <inherit scheme="def:Number"/>
      <inherit scheme="NixIdent"/>

      <regexp match="/[^\)\}\]\s]/" region='def:Error'/>

    </scheme>

    <scheme name="nix">
      <inherit scheme="NixExpression"/>
    </scheme>

  </type>
</hrc>
<!--
Copyright (C) 1999-2005 Cail Lomecb <irusskih@gmail.com>
Copyright (C) Ralf Bokelberg <eclipse_colorer@bokelberg.de>
Copyright (C) Vladimir Panteleev <vladimi@thecybershadow.net>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, see <https://www.gnu.org/licenses/>
-->