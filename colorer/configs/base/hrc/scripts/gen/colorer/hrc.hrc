<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hrc
  PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "http://colorer.sf.net/2003/hrc.dtd">
<hrc xmlns="http://colorer.sf.net/2003/hrc" xmlns:xs="http://www.w3.org/2001/XMLSchema"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     version="take5"
     xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd">
<!--
  insert this define into HRC base catalog file (colorer.hrc)

  <prototype name="hrc" group="group" description="hrc" targetNamespace="http://colorer.sf.net/2003/hrc">
    <location link="hrc.hrc"/>
    <filename>/\./ix</filename>
  </prototype>
--><type name="hrc">
      <annotation>
         <documentation>
           XSLT Generated HRC scheme for language 'hrc'
           from XML Schema with xsd2hrc.xsl version 0.9.4 
            Copyright (C) 2002-04 Cail Lomecb
            Portions copyright (C) 2004-06 Eugene Efremov

           Scheme parameters:
             targetNamespace             : http://colorer.sf.net/2003/hrc
             hrctype                     : hrc
             allow-common-attr           : yes
             allow-any-attr              : no
             allow-unknown-elements      : no
             allow-unknown-root-elements : no
             force-single-root           : yes
             default prefixes            : (?{}(?{}hrc)(?{}:))?
               you can change them with entity 'nsprefix'
             
             </documentation>
         <documentation>
          Schema documentation:</documentation>
         <contributors><![CDATA[Cail Lomecb, Eugene Efremov]]></contributors>
      </annotation>
      <import type="def"/>
      <region name="element.start.name" parent="xml:element.defined.start.name"/>
      <region name="element.end.name" parent="xml:element.defined.end.name"/>
      <region name="element.start.lt" parent="xml:element.start.lt"/>
      <region name="element.start.gt" parent="xml:element.start.gt"/>
      <region name="element.end.lt" parent="xml:element.end.lt"/>
      <region name="element.end.gt" parent="xml:element.end.gt"/>
      <region name="element.nsprefix" parent="xml:element.defined.nsprefix"/>
      <region name="element.nscolon" parent="xml:element.nscolon"/>
      <region name="Attribute.name" parent="xml:Attribute.defined.name"/>
      <region name="Attribute.nsprefix" parent="xml:Attribute.defined.nsprefix"/>
      <region name="Attribute.nscolon" parent="xml:Attribute.nscolon"/>
      <region name="AttValue" parent="xml:AttValue.defined"/>
      <region name="AttValue.start" parent="xml:AttValue.defined.start"/>
      <region name="AttValue.end" parent="xml:AttValue.defined.end"/>
      <region name="Enumeration" parent="xml:Enumeration"
              description="Enumerated type values"/>
      <region name="typeOutlined" description="Type definition" parent="def:Outlined"/>
      <region name="packageOutlined" description="Package definition" parent="def:Outlined"/>
      <region name="prototypeOutlined" description="Prototype definition"
              parent="def:Outlined"/>
      <region name="importOutlined" description="Type Import" parent="def:Outlined"/>
      <region name="regionOutlined" description="Region definition" parent="def:Outlined"/>
      <region name="entityOutlined" description="Entity definition" parent="def:Outlined"/>
      <region name="schemeOutlined" description="Scheme declaration" parent="def:Outlined"/>
      <region name="keywordsOutlined" description="Keywords list" parent="def:Outlined"/>
      <entity name="ns-real-prefix" value="(?{}(?{}hrc)(?{}:))"/>
      <entity name="nsprefix" value="(?{}(?{}hrc)(?{}:))?"/>
      <entity name="attr-nsprefix" value="(?{}(?{}hrc)(?{Attribute.nscolon}:))"/>
      <scheme name="_hrc_int_elementContent">
         <block start="/~( (&lt;) (  ((%xml:NCName;) (:) )? (%xml:Name;) ) \M &gt;?   )/x"
                end="/( (&lt;\/) (\y3\b)?= ( (%xml:NCName;) (:) )? (%xml:Name;) \b \M \s* (&gt;?)                   | (\/ \M &gt;) )/x"
                region01="PairStart"
                region02="element.start.lt"
                region05="element.nsprefix"
                region06="element.nscolon"
                region07="element.start.name"
                region11="PairEnd"
                region12="element.end.lt"
                region15="element.nsprefix"
                region16="element.nscolon"
                region17="element.end.name"
                region18="element.end.gt"
                region19="element.start.gt"
                scheme="xml:elementContent2"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_AttValue">
         <block start="/(&#34;)/" end="/(\y1)/" region00="PairStart" region10="PairEnd"
                region01="AttValue.start"
                region11="AttValue.end"
                scheme="xml:AttValue.content.quot"
                region="AttValue"/>
         <block start="/(')/" end="/(\y1)/" region00="PairStart" region10="PairEnd"
                region01="AttValue.start"
                region11="AttValue.end"
                scheme="xml:AttValue.content.apos"
                region="AttValue"/>
      </scheme>
      <scheme name="AttributeContent">
         <inherit scheme="xml:AttributeContent">
            <virtual scheme="xml:AttValue" subst-scheme="_hrc_int_AttValue"/>
         </inherit>
      </scheme>
      <!--custom schemes from '../../src/colorer/src/custom.hrc.xml'--><region name="BracketStart" parent="StringEdge"/>
      <region name="BracketEnd" parent="StringEdge"/>
      <region name="Scheme.nsprefix" parent="xml:QName.nsprefix"/>
      <region name="Scheme.nscolon" parent="xml:QName.nscolon"/>
      <region name="Scheme.name" parent="xml:QName.name"/>
      <region name="Scheme.keyword" parent="def:StringContent"/>
      <scheme name="QName-content">
         <regexp match="/~(%xml:NCName;)(\:)\M%xml:NCName;/" region1="Scheme.nsprefix"
                 region2="Scheme.nscolon"/>
         <regexp match="/(~|\:?#1)(default|empty)[&#34;']?=/" region="Scheme.keyword"/>
         <regexp match="/(~|\:?#1)%xml:NCName;\b/" region="Scheme.name"/>
      </scheme>
      <scheme name="HRC-String">
         <inherit scheme="xml:Reference"/>
         <regexp match="/\%%xml:Name;\;/" region="xml:EntityRef"/>
         <inherit scheme="xml:badLiter"/>
      </scheme>
      <scheme name="RE-String">
         <annotation>
            <documentation>
			Regexp string. Using package regexp.hrc. 
		</documentation>
         </annotation>
         <inherit scheme="regexp:hrc.regexp">
            <virtual scheme="regexp:code" subst-scheme="QName-content"/>
            <virtual scheme="regexp:string" subst-scheme="HRC-String"/>
            <virtual scheme="regexp:hrc.regexp" subst-scheme="RE-String"/>
         </inherit>
      </scheme>
      <scheme name="RE-Class">
         <inherit scheme="regexp:hrc.class">
            <virtual scheme="regexp:code" subst-scheme="QName-content"/>
            <virtual scheme="regexp:string" subst-scheme="HRC-String"/>
         </inherit>
      </scheme>
      <scheme name="REworddiv-content">
         <regexp match="/\%%xml:Name;\;/" region="xml:EntityRef"/>
         <block start="/(\[)/" end="/(\])/" scheme="RE-Class" region00="BracketStart"
                region01="def:PairStart"
                region10="BracketEnd"
                region11="def:PairEnd"/>
      </scheme>
      <scheme name="REentity-content">
         <inherit scheme="RE-String"/>
         <inherit scheme="RE-Class"/>
      </scheme>
      <scheme name="REentity-content-error">
         <inherit scheme="REentity-content"/>
      </scheme>
      <scheme name="REstring-content">
         <block start="/(~|^\s*)(\/)/" end="/(\/([igsxm]*))/" scheme="RE-String"
                region00="BracketStart"
                region02="PairStart"
                region10="BracketEnd"
                region11="PairEnd"
                region12="regexp:SpecArea"/>
      </scheme>
      <!--end custom--><scheme name="regionX-attributeGroup">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region0)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region1)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region2)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region3)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region4)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region5)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region6)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region7)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region8)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region9)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(regiona)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(regionb)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(regionc)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(regiond)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(regione)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(regionf)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
      </scheme>
      <scheme name="hrc-element">
         <block start="/\M &lt; (%nsprefix;hrc ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="hrc-elementContent"/>
      </scheme>
      <scheme name="regionXX-attributeGroup">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region00)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region01)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region02)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region03)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region04)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region05)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region06)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region07)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region08)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region09)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region0a)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region0b)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region0c)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region0d)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region0e)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region0f)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region10)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region11)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region12)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region13)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region14)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region15)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region16)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region17)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region18)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region19)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region1a)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region1b)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region1c)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region1d)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region1e)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region1f)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
      </scheme>
      <scheme name="REstring-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: /.*/[ixs]*--><regexp region="Enumeration" priority="low" match="/\/.*\/[ixs]*/"/>
      </scheme>
      <scheme name="REstring-content-error">
         <inherit scheme="REstring-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="REstring-content-cdsect">
         <inherit scheme="REstring-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="REstring-Attributes"/>
      <scheme name="REstring-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="REstring-content-error"/>
         </inherit>
      </scheme>
      <scheme name="REstring-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="REstring-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="REstring-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="REstring-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="REworddiv-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: \[.*\]|%.*;--><regexp region="Enumeration" priority="low" match="/\[.*\]|\%.*;/"/>
      </scheme>
      <scheme name="REworddiv-content-error">
         <inherit scheme="REworddiv-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="REworddiv-content-cdsect">
         <inherit scheme="REworddiv-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="REworddiv-Attributes"/>
      <scheme name="REworddiv-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="REworddiv-content-error"/>
         </inherit>
      </scheme>
      <scheme name="REworddiv-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="REworddiv-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="REworddiv-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="REworddiv-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="REentity-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: .*--><regexp region="Enumeration" priority="low" match="/.*/"/>
      </scheme>
      <scheme name="REentity-content-error-old">
         <inherit scheme="REentity-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="REentity-content-cdsect">
         <inherit scheme="REentity-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="REentity-Attributes"/>
      <scheme name="REentity-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="REentity-content-error"/>
         </inherit>
      </scheme>
      <scheme name="REentity-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="REentity-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="REentity-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="REentity-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="REstring-or-null-content"><!--union:--><inherit scheme="REstring-content"/>
         <inherit scheme="_hrc_int_d12e20-content"/>
      </scheme>
      <scheme name="REstring-or-null-content-error">
         <inherit scheme="REstring-or-null-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="REstring-or-null-content-cdsect">
         <inherit scheme="REstring-or-null-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="REstring-or-null-Attributes"/>
      <scheme name="REstring-or-null-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="REstring-or-null-content-error"/>
         </inherit>
      </scheme>
      <scheme name="REstring-or-null-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="REstring-or-null-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="REstring-or-null-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="REstring-or-null-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e20-content">
         <regexp region="Enumeration" match="//"/>
      </scheme>
      <scheme name="_hrc_int_d12e20-content-error">
         <inherit scheme="_hrc_int_d12e20-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e20-Attributes"/>
      <scheme name="_hrc_int_d12e20-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e20-content-error"/>
         </inherit>
      </scheme>
      <scheme name="QName-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: (\i\c*:)?\i\c*--><regexp region="Enumeration" priority="low"
                 match="/([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?[%xml:NCNameStartChar;][%xml:NCNameChar;]*/"/>
      </scheme>
      <scheme name="QName-content-error">
         <inherit scheme="QName-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="QName-content-cdsect">
         <inherit scheme="QName-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="QName-Attributes"/>
      <scheme name="QName-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="QName-content-error"/>
         </inherit>
      </scheme>
      <scheme name="QName-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="QName-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="QName-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="QName-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="hrc-content">
         <block start="/\M &lt; (%nsprefix;annotation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="annotation-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;prototype \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="prototypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;prototype ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="prototype-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;package \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="packageOutlined"/>
         <block start="/\M &lt; (%nsprefix;package ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="package-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;type \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="typeOutlined"/>
         <block start="/\M &lt; (%nsprefix;type ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="type-elementContent"/>
      </scheme>
      <scheme name="hrc-content-error">
         <inherit scheme="hrc-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="hrc-content-cdsect">
         <inherit scheme="hrc-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="hrc-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(version)\M([\s\=]|$)/x"
                scheme="xmlschema:NMTOKEN-AttributeContent"/>
      </scheme>
      <scheme name="hrc-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="hrc-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="hrc-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="annotation-content">
         <block start="/\M &lt; (%nsprefix;appinfo ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e71-elementContent"/>
         <block start="/\M &lt; (%nsprefix;documentation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e78-elementContent"/>
         <block start="/\M &lt; (%nsprefix;contributors ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e85-elementContent"/>
      </scheme>
      <scheme name="annotation-content-error">
         <inherit scheme="annotation-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="annotation-content-cdsect">
         <inherit scheme="annotation-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="annotation-Attributes"/>
      <scheme name="annotation-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="annotation-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="annotation-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: appinfo
-->
<scheme name="_hrc_int_d12e71-content">
         <regexp match="/ &lt; (%ns-real-prefix;%xml:NCName; ([\s\/&gt;]|$) )/x" region="def:Error"/>
         <inherit scheme="xml:element"/>
      </scheme>
      <scheme name="_hrc_int_d12e71-content-error">
         <inherit scheme="_hrc_int_d12e71-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e71-content-cdsect">
         <inherit scheme="_hrc_int_d12e71-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e71-Attributes"/>
      <scheme name="_hrc_int_d12e71-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e71-content"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e71-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: documentation
-->
<scheme name="_hrc_int_d12e78-content">
         <regexp match="/ &lt; (%ns-real-prefix;%xml:NCName; ([\s\/&gt;]|$) )/x" region="def:Error"/>
         <inherit scheme="xml:element"/>
      </scheme>
      <scheme name="_hrc_int_d12e78-content-error">
         <inherit scheme="_hrc_int_d12e78-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e78-content-cdsect">
         <inherit scheme="_hrc_int_d12e78-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e78-Attributes"/>
      <scheme name="_hrc_int_d12e78-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e78-content"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e78-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: contributors
-->
<scheme name="_hrc_int_d12e85-content">
         <regexp match="/ &lt; (%ns-real-prefix;%xml:NCName; ([\s\/&gt;]|$) )/x" region="def:Error"/>
         <inherit scheme="xml:element"/>
      </scheme>
      <scheme name="_hrc_int_d12e85-content-error">
         <inherit scheme="_hrc_int_d12e85-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e85-content-cdsect">
         <inherit scheme="_hrc_int_d12e85-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e85-Attributes"/>
      <scheme name="_hrc_int_d12e85-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e85-content"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e85-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="package-content">
         <block start="/\M &lt; (%nsprefix;annotation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="annotation-elementContent"/>
         <block start="/\M &lt; (%nsprefix;location ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="location-elementContent"/>
      </scheme>
      <scheme name="package-content-error">
         <inherit scheme="package-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="package-content-cdsect">
         <inherit scheme="package-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="package-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(description)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(global)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(targetNamespace)\M([\s\=]|$)/x"
                scheme="xmlschema:anyURI-AttributeContent"/>
      </scheme>
      <scheme name="package-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="package-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="package-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="prototype-content">
         <block start="/\M &lt; (%nsprefix;annotation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="annotation-elementContent"/>
         <block start="/\M &lt; (%nsprefix;location ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="location-elementContent"/>
         <block start="/\M &lt; (%nsprefix;filename ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="filename-elementContent"/>
         <block start="/\M &lt; (%nsprefix;firstline ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="firstline-elementContent"/>
         <block start="/\M &lt; (%nsprefix;parameters ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="parameters-elementContent"/>
      </scheme>
      <scheme name="prototype-content-error">
         <inherit scheme="prototype-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="prototype-content-cdsect">
         <inherit scheme="prototype-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="prototype-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(description)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(group)\M([\s\=]|$)/x"
                scheme="xmlschema:Name-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(targetNamespace)\M([\s\=]|$)/x"
                scheme="xmlschema:anyURI-AttributeContent"/>
      </scheme>
      <scheme name="prototype-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="prototype-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="prototype-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="location-content"/>
      <scheme name="location-content-error">
         <inherit scheme="location-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="location-content-cdsect">
         <inherit scheme="location-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="location-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(link)\M([\s\=]|$)/x"
                scheme="xmlschema:anyURI-AttributeContent"/>
      </scheme>
      <scheme name="location-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="location-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="location-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="filename-content">
         <inherit scheme="REstring-content"/>
      </scheme>
      <scheme name="filename-content-error">
         <inherit scheme="filename-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="filename-content-cdsect">
         <inherit scheme="filename-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="filename-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(weight)\M([\s\=]|$)/x"
                scheme="xmlschema:decimal-AttributeContent"/>
      </scheme>
      <scheme name="filename-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="filename-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="filename-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="filename-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="firstline-content">
         <inherit scheme="REstring-content"/>
      </scheme>
      <scheme name="firstline-content-error">
         <inherit scheme="firstline-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="firstline-content-cdsect">
         <inherit scheme="firstline-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="firstline-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(weight)\M([\s\=]|$)/x"
                scheme="xmlschema:decimal-AttributeContent"/>
      </scheme>
      <scheme name="firstline-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="firstline-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="firstline-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="firstline-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="parameters-content">
         <block start="/\M &lt; (%nsprefix;param ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e172-elementContent"/>
      </scheme>
      <scheme name="parameters-content-error">
         <inherit scheme="parameters-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="parameters-content-cdsect">
         <inherit scheme="parameters-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="parameters-Attributes"/>
      <scheme name="parameters-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="parameters-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="parameters-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: param
-->
<scheme name="_hrc_int_d12e172-content"/>
      <scheme name="_hrc_int_d12e172-content-error">
         <inherit scheme="_hrc_int_d12e172-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e172-content-cdsect">
         <inherit scheme="_hrc_int_d12e172-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e172-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(value)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(description)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
      </scheme>
      <scheme name="_hrc_int_d12e172-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e172-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e172-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="type-content">
         <block start="/\M &lt; (%nsprefix;annotation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="annotation-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;import \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="importOutlined"/>
         <block start="/\M &lt; (%nsprefix;import ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="import-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;region \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="regionOutlined"/>
         <block start="/\M &lt; (%nsprefix;region ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="region-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;entity \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="entityOutlined"/>
         <block start="/\M &lt; (%nsprefix;entity ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="entity-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;scheme \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="schemeOutlined"/>
         <block start="/\M &lt; (%nsprefix;scheme ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="scheme-elementContent"/>
      </scheme>
      <scheme name="type-content-error">
         <inherit scheme="type-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="type-content-cdsect">
         <inherit scheme="type-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="type-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
      </scheme>
      <scheme name="type-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="type-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="type-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="scheme-content">
         <block start="/\M &lt; (%nsprefix;annotation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="annotation-elementContent"/>
         <block start="/\M &lt; (%nsprefix;regexp ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="regexp-elementContent"/>
         <block start="/\M &lt; (%nsprefix;block ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="block-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;keywords \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="keywordsOutlined"/>
         <block start="/\M &lt; (%nsprefix;keywords ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="keywords-elementContent"/>
         <block start="/\M &lt; (%nsprefix;inherit ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="inherit-elementContent"/>
      </scheme>
      <scheme name="scheme-content-error">
         <inherit scheme="scheme-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="scheme-content-cdsect">
         <inherit scheme="scheme-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="scheme-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(if)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(unless)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
      </scheme>
      <scheme name="scheme-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="scheme-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="scheme-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="import-content"/>
      <scheme name="import-content-error">
         <inherit scheme="import-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="import-content-cdsect">
         <inherit scheme="import-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="import-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(type)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
      </scheme>
      <scheme name="import-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="import-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="import-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="entity-content"/>
      <scheme name="entity-content-error">
         <inherit scheme="entity-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="entity-content-cdsect">
         <inherit scheme="entity-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="entity-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(value)\M([\s\=]|$)/x"
                scheme="REentity-AttributeContent"/>
      </scheme>
      <scheme name="entity-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="entity-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="entity-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="region-content"/>
      <scheme name="region-content-error">
         <inherit scheme="region-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="region-content-cdsect">
         <inherit scheme="region-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="region-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(parent)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(description)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
      </scheme>
      <scheme name="region-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="region-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="region-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="regexp-content">
         <inherit scheme="blockInner-content"/>
      </scheme>
      <scheme name="regexp-content-error">
         <inherit scheme="regexp-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="regexp-content-cdsect">
         <inherit scheme="regexp-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="regexp-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(priority)\M([\s\=]|$)/x"
                scheme="priority-AttributeContent"/>
         <inherit scheme="blockInner-Attributes"/>
      </scheme>
      <scheme name="regexp-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="regexp-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="regexp-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="regexp-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="priority-content">
         <regexp region="Enumeration" match="/low/"/>
         <regexp region="Enumeration" match="/normal/"/>
      </scheme>
      <scheme name="priority-content-error">
         <inherit scheme="priority-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="priority-content-cdsect">
         <inherit scheme="priority-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="priority-Attributes"/>
      <scheme name="priority-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="priority-content-error"/>
         </inherit>
      </scheme>
      <scheme name="priority-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="priority-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="priority-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="priority-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="block-content">
         <block start="/\M &lt; (%nsprefix;start ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="blockInner-elementContent"/>
         <block start="/\M &lt; (%nsprefix;end ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="blockInner-elementContent"/>
      </scheme>
      <scheme name="block-content-error">
         <inherit scheme="block-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="block-content-cdsect">
         <inherit scheme="block-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="block-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(start)\M([\s\=]|$)/x"
                scheme="REstring-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(end)\M([\s\=]|$)/x"
                scheme="REstring-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(scheme)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(priority)\M([\s\=]|$)/x"
                scheme="priority-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(content-priority)\M([\s\=]|$)/x"
                scheme="priority-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(inner-region)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e279-AttributeContent"/>
         <inherit scheme="regionXX-attributeGroup"/>
      </scheme>
      <scheme name="block-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="block-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="block-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: inner-region
-->
<scheme name="_hrc_int_d12e279-content">
         <regexp region="Enumeration" match="/yes/"/>
         <regexp region="Enumeration" match="/no/"/>
      </scheme>
      <scheme name="_hrc_int_d12e279-content-error">
         <inherit scheme="_hrc_int_d12e279-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e279-Attributes"/>
      <scheme name="_hrc_int_d12e279-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e279-content-error"/>
         </inherit>
      </scheme>
      <scheme name="blockInner-content">
         <inherit scheme="REstring-content"/>
      </scheme>
      <scheme name="blockInner-content-error">
         <inherit scheme="blockInner-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="blockInner-content-cdsect">
         <inherit scheme="blockInner-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="blockInner-Attributes">
         <inherit scheme="regionX-attributeGroup"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(match)\M([\s\=]|$)/x"
                scheme="REstring-AttributeContent"/>
      </scheme>
      <scheme name="blockInner-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="blockInner-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="blockInner-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="blockInner-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="inherit-content">
         <block start="/\M &lt; (%nsprefix;virtual ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="virtual-elementContent"/>
      </scheme>
      <scheme name="inherit-content-error">
         <inherit scheme="inherit-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="inherit-content-cdsect">
         <inherit scheme="inherit-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="inherit-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(scheme)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
      </scheme>
      <scheme name="inherit-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="inherit-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="inherit-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="virtual-content"/>
      <scheme name="virtual-content-error">
         <inherit scheme="virtual-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="virtual-content-cdsect">
         <inherit scheme="virtual-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="virtual-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(scheme)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(subst-scheme)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
      </scheme>
      <scheme name="virtual-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="virtual-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="virtual-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="keywords-content">
         <block start="/\M &lt; (%nsprefix;word ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="word-elementContent"/>
         <block start="/\M &lt; (%nsprefix;symb ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="symb-elementContent"/>
      </scheme>
      <scheme name="keywords-content-error">
         <inherit scheme="keywords-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="keywords-content-cdsect">
         <inherit scheme="keywords-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="keywords-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(ignorecase)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e364-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(priority)\M([\s\=]|$)/x"
                scheme="priority-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(worddiv)\M([\s\=]|$)/x"
                scheme="REworddiv-AttributeContent"/>
      </scheme>
      <scheme name="keywords-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="keywords-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="keywords-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: ignorecase
-->
<scheme name="_hrc_int_d12e364-content">
         <regexp region="Enumeration" match="/yes/"/>
         <regexp region="Enumeration" match="/no/"/>
      </scheme>
      <scheme name="_hrc_int_d12e364-content-error">
         <inherit scheme="_hrc_int_d12e364-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e364-Attributes"/>
      <scheme name="_hrc_int_d12e364-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e364-content-error"/>
         </inherit>
      </scheme>
      <scheme name="symb-content"/>
      <scheme name="symb-content-error">
         <inherit scheme="symb-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="symb-content-cdsect">
         <inherit scheme="symb-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="symb-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
      </scheme>
      <scheme name="symb-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="symb-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="symb-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="word-content"/>
      <scheme name="word-content-error">
         <inherit scheme="word-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="word-content-cdsect">
         <inherit scheme="word-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="word-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="xmlschema:string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(region)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
      </scheme>
      <scheme name="word-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="word-content"/>
            <virtual scheme="xml:content.cdata" subst-scheme="xml:badChar"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="word-Attributes"/>
         </inherit>
      </scheme>

      <scheme name="hrc-root">
         <annotation>
            <documentation>
               You can replace these elements with needed single root element
               with customizing HRC generation process.
              </documentation>
         </annotation>
         <inherit scheme="hrc-element"/>
      </scheme>
      <scheme name="hrc-root-addref">
         <inherit scheme="hrc-root"/>
      </scheme>
      <scheme name="hrc">
         <inherit scheme="xml:singleroot">
            <virtual scheme="xml:element" subst-scheme="hrc-root-addref"/>
         </inherit>
      </scheme>
   </type>
</hrc>