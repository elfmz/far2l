.Language=English,English
.PluginContents=FarColorer

@contents
$^#FarColorer#

    ~Plugin setup~@config@

    ~Command line support~@cmdline@

    ~Plugin's menus~@menu@

    ~Logging~@log

    ~Colorer base`s settings~@customize@

    ~Schemes settings~@confighrc@

    ~About authors~@author@

@config
$^#FarColorer's settings#

  #Enabled#
     Enable/Disable FarColorer.

  #Cross#
     [ ] Do not show ever
     [?] Show if included in the scheme. 
     [x] Always Show.

  #Cross style#
     Cross style shown when "[x] Cross"

  #Pairs#
     Allocate or not paired language elements (brackets, quotes)

  #Syntax#
     Turns on display of syntax

  #Classic outline style#
     In classic style displays only the name of the function. Otherwise show
     the beginning of the line number, then the first letter in the function 
     and the function name itself.

  #Change background editor#
     In the set condition, FarColorer set in System Preferences color of 
     "Plain Text" color group "editor" such as and the default color for 
     the color scheme FarColorer.
     The effect is visible on the files, the number of rows in less than window height
     editor.
     Does not work in TrueColor mode.

  #Color style#
     Choose a color style, which will be used for coloring text. 
     The choice does not work if the plugin is disabled.

  #---------------------------Custom Settings-------------------------#
  The following four parameters are used to configure the basic library of schemes and styles
  used in the plug-in. For more information, see ~Configuring the Schema and Style database~@customize@

  #catalog.xml file#
     Full file path sets default catalog file for FarColorer.
     If this field is empty FarColorer trying to find the file automatically
     in a subfolder of "base" parent directory plugin.

  #Custom schemas folder (hrc)#
     The full path to the folder with custom schema files

  #Custom color styles folder (hrd)#
     The full path to the folder with custom style files

  #Custom schemas settings file (hrcsettings)#
     The full path to the file with custom schema settings

  #--------------------------TrueColor Settings------------------------#
  #Enabled#
     Enable/Disable using of TrueColor (24 bit RGB) coloring.

  #Color style#
     Choose a color style, which will be used for coloring text in TrueColor. 
     The choice does not work if TrueColor is disabled or unavailable.
  #------------------------------------------------------------------#

  #[ Test schema library ]#
     Tests ability to load all the language of schemes, taking the path to
     catalog.xml from the settings window.

  #[ Schemes settings ]#
    Open dialog for schemes settings. The dialog does not work if the plugin is disabled.

  #[ Ok ]#
     Closes dialog and save settings.

@customize
$^#Colorer base`s settings#
    FarColorer comes with a basic library of HRC schemas and HRD styles, the root file of which is catalog.xml .
    To change the set and behavior of HRC schemes and HRD styles, the file path parameters are used in the plugin settings dialog.,
    as well as the ~Schema Settings~@confighrc dialog.

    The necessary steps to change the base library are shown on the page ~https://colorer.github.io/advanced/custom/~ .

    When working with the settings library of schemes and styles, the following loading order is applied:
    1. Read the value of the "catalog.xml file"
        - if filled in, then use the specified file as catalog.xml
        - otherwise we will use catalog.xml supplied with the plugin
    2. Read the hrcsettings.xml included in the plugin delivery
    3. Read the value of the "Custom schemas folder (hrc)"
        - if this file is filled in, then we process the file as a set of hrd-sets (an outdated method, for backward compatibility)
        - if this folder is filled in, then we load everything from it *.hrd files
    4. Read the value of the "Custom color styles folder (hrd)"
        - if this file is filled in, then we process it in the same way as proto.hrc (outdated method, for backward compatibility)
        - if this folder is filled in, then we load everything from it *.hrc files
    5. Read the value of the "Custom schemas settings file (hrcsettings)" (custom hrcsettings.xml)
        - if it is filled in, then load it.
        - if it is not filled in, check the environment variable COLORER_HRC_SETTINGS with the path to the file.
     6. Read the scheme settings from the plugin settings in far2l

@confighrc
$^#Schemes settings#
    For each of the selected schemes, a list of parameters that affect the mapping
coloring.
    Parameter value - the value set for this parameter.
Values of the form <default-znach.> shows that the parameter is "znach." It is set
in the system (non-user) settings of the scheme or scheme is taken from default.
    Save all the changes occurs after clicking "OK" button.

@log
$^#Logging#

  The plugin implements the ability to log work into the common logging mechanism far2l - sdterr.
  Logging is disabled by default.
  Enabling logging

      export FAR2L_STDERR=somefile.log
      export COLORER_VERBOSE=debug
      far2l

  The following logging levels are supported: off, error, warning, info, debug, trace

@add
$# Outliner
    Here you can see a list of all functions or syntax errors found.
Choose any item to go to corresponding line in text.
    
    You can use keyboard filter to quickly search for required items:

    #Ctrl-Left/Right#
      Expand-Collapse level of Outliner

    #Ctrl-Up/Down#
      Move to next/previous item both in outliner and in source code

    #Ctrl-Enter#
      Close the outliner and insert current item into the cursor position
    
    #Enter#
      Close the outliner and jump to the selected item

    #Tab#
      Complementing filter symbols, written after '?' in the field of display filter

    #Symbol keys [0-9a-z;:-_]#
      Filter out the outliner items against entered filter

@menu
$#FarColorer operation

  #1 List types#
    Lists all supported file types. You can choose any of them to use
with current editor.

  #2 Match pair#
    Searches paired bracket (or any other pair structure) of the
current region under cursor and jumps there.

  #3 Select block#
    Moves cursor to start of block and selects it all. You can call this
function as on block limits as inside it. In second case FarColorer will find
start and end of nearest block automatically.

  #4 Select pair#
    Selects pair block - but don't selects pair structures at start and end.

  #5 Outliner List#
    Shows all outlined regions in current file.
There you can choose and jump into any of them, also you can use there any
alphabetic symbols to create filters.

  #6 Errors List#
    As previous - but shows all errors in the text.

  #7 Select region#
    Selects region under cursor.

  #*# All these features are depend on the content of language scheme.
All information is taken from syntax regions analysis.

  #8 Find function#
    Searches function name under cursor in outliner view, and jumps there.

  #9 Update highlight#
    Updates syntax highlighting in current editor. Use it, if
some problems occurs in current syntax.

  #R Reload schema library#
    Reload the configuration plugin and library schemes.

  #C Configuration#
    Calls FarColorer ~configuration menu~@config@.

@hrd
$# Color style selection
    List of all available color schemes. You can choose what you need.

@exception
$# Exception occurred
    Exception happened while FarColorer work.
All further processing would be disabled. You can re-enable
FarColorer from it's settings menu after locating and removing
exception cause. When logging is enabled, additional information about the error
will be displayed in the log.

@filetypechoose
$# List types
    The list contains all of the supported file types. By choosing any, you force 
the type of coloring the current file.
   
    #Automatic detection# - select the type of file produced plugin built rules.
    #Favorites# - The list of chosen types. Add to "Favorites" is produced by 
pressing the Ins, delete - Delete.
    #Hot keys# - to assign a hot key to the file type you need to press F4, and 
in the dialog box to specify the key.

    Hot keys and being in the group "Favorites" can also be customized through the
~Schemes settings.~@confighrc@ These are the parameters 'hotkey' and 'favorite' for 
any of the schemes.
 
@keyassign
$# Define key
    Keys 0-9, A-Z

@author
$^#FarColorer is a syntax highlighting plugin for far2l (fork of Far Manager).
    #Plugin home site#
           https://github.com/elfmz/far2l
    #Colorer library site#
           https://colorer.sf.net
           https://colorer.github.io

    #Cail Lomecb# (Igor Ruskih) Copyright (c) 1999-2009
           email  : irusskih at gmail dot com

    #ctapmex# (Aleksey Dobrunov)
           email  : ctapmex at ctapmex dot com

